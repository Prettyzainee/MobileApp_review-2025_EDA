# -*- coding: utf-8 -*-
"""MobileApp_review2025.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HoeRrrl5XCftDc9LHO_Y6tQEI_y8XV63
"""

# =======================
# Exploratory Data Analysis Script
# =======================

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load dataset
file_path = "multilingual_mobile_app_reviews_2025.csv"  # update path if needed
df = pd.read_csv(file_path)

# -----------------
# Basic Information
# -----------------
print("Dataset Shape:", df.shape)
print("\nData Types:\n", df.dtypes)
print("\nMissing Values:\n", df.isnull().sum())

# Identify unique columns (all unique values)
unique_cols = [col for col in df.columns if df[col].is_unique]
print("\nUnique Columns:", unique_cols)

# Remove unnecessary identifier column(s)
df_clean = df.drop(columns=["review_id"], errors="ignore")
print("New Shape after removing ID columns:", df_clean.shape)

# -----------------
# Univariate Analysis
# -----------------
num_cols = df_clean.select_dtypes(include=['int64','float64']).columns
cat_cols = df_clean.select_dtypes(include=['object','bool']).columns

# Numerical distributions
for col in num_cols:
    plt.figure(figsize=(6,4))
    sns.histplot(df_clean[col], kde=True, bins=30)
    plt.title(f'Distribution of {col}')
    plt.show()

# Categorical distributions (top 10 categories)
for col in cat_cols:
    plt.figure(figsize=(6,4))
    df_clean[col].value_counts().nlargest(10).plot(kind='bar')
    plt.title(f'Top 10 categories in {col}')
    plt.show()

# -----------------
# Bivariate Analysis
# -----------------
# Rating vs numerical variables
for col in num_cols:
    if col != "rating":
        plt.figure(figsize=(6,4))
        sns.scatterplot(x=df_clean[col], y=df_clean["rating"])
        plt.title(f'Rating vs {col}')
        plt.show()

# Rating vs categorical variables
for col in cat_cols:
    plt.figure(figsize=(8,4))
    sns.boxplot(x=df_clean[col], y=df_clean["rating"])
    plt.xticks(rotation=45)
    plt.title(f'Rating distribution across {col}')
    plt.show()

# -----------------
# Multivariate Analysis
# -----------------
plt.figure(figsize=(8,6))
sns.scatterplot(x="user_age", y="rating", hue="user_gender", data=df_clean)
plt.title("Multivariate: Rating vs Age by Gender")
plt.show()

# -----------------
# Correlation Analysis
# -----------------
plt.figure(figsize=(8,6))
corr = df_clean[num_cols].corr()
sns.heatmap(corr, annot=True, cmap="coolwarm")
plt.title("Correlation Heatmap")
plt.show()

# Pairplot for numerical variables
sns.pairplot(df_clean[num_cols])
plt.suptitle("Pairplot of Numerical Variables", y=1.02)
plt.show()

"""# Task
Analyze the dataset "googleplaystore.csv" to understand the relationships between numerical and categorical variables, analyze text reviews, and combine these analyses to provide a comprehensive summary of findings.

## Analyze categorical variable relationships with numerical variables

### Subtask:
Visualize the relationships between each categorical variable and relevant numerical variables using appropriate plots.

**Reasoning**:
Visualize the relationships between categorical and numerical variables using box plots.
"""

for cat_col in cat_cols:
    for num_col in num_cols:
        if num_col != "rating":
            plt.figure(figsize=(10, 6))
            sns.boxplot(x=df_clean[cat_col], y=df_clean[num_col])
            plt.xticks(rotation=45, ha='right')
            plt.title(f'Relationship between {cat_col} and {num_col}')
            plt.tight_layout()
            plt.show()

!pip install sweetviz
import sweetviz as sv

report = sv.analyze(df)
report.show_html("sweetviz_report.html")

!pip install ydata-profiling
from ydata_profiling import ProfileReport

profile = ProfileReport(df, title="Pandas Profiling Report")
profile.to_file("pandas_profiling_report.html")